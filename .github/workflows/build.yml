name: Build
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    name: Build Binary (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            cross: true
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            cross: false
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            cross: false
          - target: aarch64-apple-darwin
            os: macos-latest
            cross: false
          - target: x86_64-apple-darwin
            os: macos-13
            cross: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check whether optimizing build
        id: metadata
        run: echo "optimize-build=${{ github.event_name == 'push' }}" >> $GITHUB_OUTPUT

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          key: build-${{ matrix.target }}-${{ steps.metadata.outputs.optimize-build }}-${{ matrix.cross }}-${{ matrix.os }}

      - name: Install cross
        if: matrix.cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          ${{ matrix.cross && 'cross' || 'cargo' }} build --profile ${{ steps.metadata.outputs.optimize-build && 'release-min-size' || 'release'}}${{ endsWith(matrix.target, 'unknown-linux-musl') && ' --features unwind' || '' }} --color always --target ${{ matrix.target }}
          mv target/${{ matrix.target }}/${{ steps.metadata.outputs.optimize-build && 'release-min-size' || 'release' }}/py-crude-resource-monitor${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }} py-crude-resource-monitor-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}

      - name: Upload Artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: py-crude-resource-monitor-${{ matrix.target }}
          path: py-crude-resource-monitor-${{ matrix.target }}${{ endsWith(matrix.target, 'windows-msvc') && '.exe' || '' }}
          if-no-files-found: error
